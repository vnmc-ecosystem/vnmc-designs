@startuml db_schema

package vnmc <<Database>> {
	package tournaments {
		abstract tournament_id as "_id" <<int32>> #a9dcdf
		abstract abbr <<string>>
		abstract year <<int32>>

		abstract registration_prop as "registration" <<Registration[]>>
		class Registration {
			osu_id: <<PlayerId>>
			time: <<Time[]>>
		}
		class Time {
			start: <<int32>>
			end: <<int32>>
		}

		abstract schedules <<Record<Event, Schedule>>>
		class Schedule {
			start: <<int64>>
			end: <<int64>>
		}
		enum Event {
			"registration"
			"qual"
			"ro64"
			"ro32"
			"ro16"
			"qf"
			"sf"
			"f"
			"gf"
		}

		abstract staff <<Record<Role, PlayerId[]>>
		enum Role {
			"host"
			"cohost"
			"designer"
			"referee"
			"mappooler"
			"mapper"
			"playtester"
			"streamer"
			"commentator"
			"statistician"
			"spreadsheeter"
			"consultant"
			"storyboarder"
			"map_description_writer"
			"lore_builder"
		}

		abstract mappool <<Record<Round, Map[] | NonQualifierPool>>>
		class Map {
			id: <<MapId>>
			pattern <<string>>
		}
		<> diamond1
		class NonQualifierPool <<Record<Category, Map[]>>
		enum Round {
			"qual"
			"ro64"
			"ro32"
			"ro16"
			"qf"
			"sf"
			"f"
			"gf"
		}
		enum Category {
			"RC"
			"HB"
			"LN"
			"SV"
			"TB"
		}

		abstract matches <<Record<Round, MatchId[] | NoBracketMatch | BracketMatch>>
		<> diamond2
		class NoBracketMatch <<Match[]>>
		class BracketMatch <<Record<Bracket, Match[] | LegMatch>>>
		<> diamond3
		class LegMatch <<Record<Leg, Match[]>>
		class Match {
			match_id?: <<MatchId>>
			player1_name: <<string>>
			player1_id: <<PlayerId>>
			player1_seed: <<int32>>
			player1_score: <<int32>>
			player2_name: <<string>>
			player2_id: <<PlayerId>>
			player2_seed: <<int32>>
			player2_score: <<int32>>
			match_time?: <<int64>>
			referee?: <<PlayerId>>
		}
		enum Bracket {
			"winners"
			"losers"
		}
		enum Leg {
			"leg1"
			"leg2"
		}

		abstract standings <<Record<Ranking, PlayerId[]>>
		enum Ranking {
			"top1"
			"top2"
			"top3"
			"top4"
			"top6"
			"top8"
			"top12"
			"top16"
			"top24"
			"top32"
			"top48"
			"top64"
		}

		abstract qual_stats_hidden <<boolean>>
		abstract top_cut <<int32>>

	}

	package beatmaps {
		abstract beatmap_id as "_id" <<string>> #a9dcdf
		abstract title <<string>>
		abstract diff_name <<string>>
		abstract banner_url <<string>>
		abstract artist <<string>>
		abstract sr <<number>>
		abstract bpm <<number>>
		abstract od <<number>>
		abstract hp <<number>>
		abstract drain_time <<number>>
		abstract map_fetch_time as "fetch_time" <<Date>>
	}

	package users {
		abstract user_id as "_id" <<string>> #a9dcdf
		abstract username <<string>>
		abstract rank <<int32>>
		abstract country_flag <<string>>
		abstract user_fetch_time as "fetch_time" <<Date>>
	}

	package sessions {
		abstract session_id as "_id" <<string>> #a9dcdf
		abstract auth_time <<Date>>
		note right of session_id : Discord ID
	}

	package scores {
		abstract score_id as "_id" <<int32>> #a9dcdf
		abstract score_list <<Record<MapId, ScoreList>>>
		class ScoreList <<Record<PlayerId, Score[]>>>
		class Score {
			accuracy: <<double>>
			score: <<int32>>
			max_combo: <<int32>>
			count_320: <<int32>>
			count_300: <<int32>>
			count_200: <<int32>>
			count_100: <<int32>>
			count_50: <<int32>>
			count_miss: <<int32>>
		}
	}

	interface TTL {
		value: 1 day
	}

	/' foreign keys used by multiple fields '/
	class MapId <<string>>
	class MatchId <<string>>
	class PlayerId <<string>>
}

registration_prop -[#add1b2]- Registration
Registration::osu_id -[#add1b2]- PlayerId
Registration::time -[#add1b2]- Time

schedules -[#add1b2]- Schedule
schedules -[#eb937f]- Event

staff -[#eb937f]- Role
staff -[#add1b2]- PlayerId

mappool -[#eb937f]- Round
mappool -- diamond1
diamond1 -[#add1b2]- Map : qual
diamond1 -[#add1b2]- NonQualifierPool : non-qual
NonQualifierPool -[#eb937f]- Category
NonQualifierPool -[#add1b2]- Map
Map::id -[#add1b2]- MapId

matches -- diamond2
diamond2 -[#add1b2]- MatchId : qual
diamond2 -[#add1b2]- NoBracketMatch : first round and single elim matches
diamond2 -[#add1b2]- BracketMatch
NoBracketMatch -[#add1b2]- Match
BracketMatch -- diamond3
diamond3 -[#add1b2]- Match : winners brac, losers brac first round and gf
diamond3 -[#add1b2]- LegMatch : all other losers brac matches
LegMatch -[#add1b2]- Match
Match::match_id -[#add1b2]- MatchId
Match::player1_id -[#add1b2]- PlayerId
Match::player2_id -[#add1b2]- PlayerId
Match::referee -[#add1b2]- PlayerId
matches -[#eb937f]- Round
BracketMatch -[#eb937f]- Bracket
LegMatch -[#eb937f]- Leg

standings -[#eb937f]- Ranking
standings -[#add1b2]- PlayerId



user_fetch_time .. TTL
map_fetch_time .. TTL
auth_time .. TTL



score_list -[#add1b2]- MapId
score_list -[#add1b2]- ScoreList
ScoreList -[#add1b2]- PlayerId
ScoreList -[#add1b2]- Score



MapId ..> beatmap_id
PlayerId ..> user_id
tournament_id ..> score_id

@enduml
